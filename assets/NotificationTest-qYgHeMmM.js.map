{"version":3,"file":"NotificationTest-qYgHeMmM.js","sources":["../../src/views/NotificationTest.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto p-4 max-w-4xl\">\r\n    <h1 class=\"text-2xl font-bold mb-6 text-light-text-primary dark:text-dark-text-primary\">\r\n      Notification System Test\r\n    </h1>\r\n\r\n    <!-- Firebase Index Warning -->\r\n    <div \r\n      v-if=\"notificationStore.indexMissing\" \r\n      class=\"bg-yellow-50 dark:bg-yellow-900/20 border-l-4 border-yellow-500 p-4 mb-6\"\r\n    >\r\n      <div class=\"flex items-start\">\r\n        <ExclamationTriangleIcon class=\"h-6 w-6 text-yellow-500 mr-3\" />\r\n        <div>\r\n          <p class=\"font-bold text-light-text-primary dark:text-dark-text-primary\">\r\n            Firebase Index Required\r\n          </p>\r\n          <p class=\"text-sm text-light-text-secondary dark:text-dark-neutral-400 mb-2\">\r\n            Firestore needs an index to query notifications properly. Until this is fixed, notifications cannot be loaded.\r\n          </p>\r\n          <button \r\n            @click=\"createIndex\" \r\n            class=\"bg-orange-600 hover:bg-orange-700 text-white py-1 px-3 rounded text-sm\"\r\n          >\r\n            Create Index Now\r\n          </button>\r\n          <p class=\"text-xs mt-2 text-light-text-tertiary dark:text-dark-neutral-500\">\r\n            You need to be logged into the Firebase Console with appropriate permissions.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"bg-light-secondary dark:bg-dark-secondary rounded-lg shadow p-4 mb-6\">\r\n      <h2 class=\"text-lg font-semibold mb-4 text-light-text-primary dark:text-dark-text-primary\">\r\n        Create Test Notification\r\n      </h2>\r\n\r\n      <div class=\"mb-4 grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-light-text-secondary dark:text-dark-neutral-400 mb-1\">\r\n            Title\r\n          </label>\r\n          <input\r\n            v-model=\"form.title\"\r\n            type=\"text\"\r\n            class=\"w-full p-2 border rounded-md bg-light-primary dark:bg-dark-primary text-light-text-primary dark:text-dark-text-primary border-light-neutral-300 dark:border-dark-neutral-600\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-light-text-secondary dark:text-dark-neutral-400 mb-1\">\r\n            Type\r\n          </label>\r\n          <select\r\n            v-model=\"form.type\"\r\n            class=\"w-full p-2 border rounded-md bg-light-primary dark:bg-dark-primary text-light-text-primary dark:text-dark-text-primary border-light-neutral-300 dark:border-dark-neutral-600\"\r\n          >\r\n            <option value=\"info\">Information</option>\r\n            <option value=\"success\">Success</option>\r\n            <option value=\"warning\">Warning</option>\r\n            <option value=\"error\">Error</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium text-light-text-secondary dark:text-dark-neutral-400 mb-1\">\r\n          Message\r\n        </label>\r\n        <textarea\r\n          v-model=\"form.message\"\r\n          rows=\"3\"\r\n          class=\"w-full p-2 border rounded-md bg-light-primary dark:bg-dark-primary text-light-text-primary dark:text-dark-text-primary border-light-neutral-300 dark:border-dark-neutral-600\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div class=\"flex flex-wrap gap-2\">\r\n        <button\r\n          @click=\"createInAppNotification\"\r\n          class=\"px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-orange-700\"\r\n        >\r\n          Show In-App Notification\r\n        </button>\r\n        \r\n        <button\r\n          @click=\"createPersistedNotification\"\r\n          class=\"px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-orange-700\"\r\n          :disabled=\"!authStore.user\"\r\n        >\r\n          Create Persisted Notification\r\n        </button>\r\n        \r\n        <button\r\n          @click=\"reloadNotifications\"\r\n          class=\"px-4 py-2 bg-light-neutral-200 dark:bg-dark-neutral-700 text-light-text-primary dark:text-dark-text-primary rounded-md hover:bg-light-neutral-300 dark:hover:bg-dark-neutral-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-accent-primary\"\r\n        >\r\n          Reload Notifications\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"bg-light-secondary dark:bg-dark-secondary rounded-lg shadow p-4\">\r\n      <h2 class=\"text-lg font-semibold mb-4 text-light-text-primary dark:text-dark-text-primary\">\r\n        Current Notifications\r\n      </h2>\r\n\r\n      <div v-if=\"!authStore.user\" class=\"mb-4 text-light-text-secondary dark:text-dark-neutral-400\">\r\n        <p>Log in to see your persisted notifications</p>\r\n      </div>\r\n      \r\n      <div v-else-if=\"notificationStore.indexMissing\" class=\"mb-4 text-light-text-secondary dark:text-dark-neutral-400\">\r\n        <p>Cannot load notifications until the Firestore index is created</p>\r\n      </div>\r\n      \r\n      <div v-else-if=\"notificationStore.userNotifications.length === 0\" class=\"text-light-text-secondary dark:text-dark-neutral-400\">\r\n        <p>You have no notifications yet</p>\r\n      </div>\r\n      \r\n      <div v-else class=\"space-y-3\">\r\n        <div \r\n          v-for=\"notification in notificationStore.userNotifications\" \r\n          :key=\"notification.id\"\r\n          class=\"p-3 border rounded-md\"\r\n          :class=\"{\r\n            'border-blue-300 dark:border-blue-700 bg-blue-50 dark:bg-blue-900/30': notification.type === 'info',\r\n            'border-green-300 dark:border-green-700 bg-green-50 dark:bg-green-900/30': notification.type === 'success',\r\n            'border-yellow-300 dark:border-yellow-700 bg-yellow-50 dark:bg-yellow-900/30': notification.type === 'warning',\r\n            'border-red-300 dark:border-red-700 bg-red-50 dark:bg-red-900/30': notification.type === 'error'\r\n          }\"\r\n        >\r\n          <div class=\"flex justify-between\">\r\n            <div class=\"font-medium text-light-text-primary dark:text-dark-text-primary\">{{ notification.title }}</div>\r\n            <div class=\"text-xs text-light-text-secondary dark:text-dark-neutral-400\">\r\n              {{ formatDate(notification.createdAt) }}\r\n            </div>\r\n          </div>\r\n          <div class=\"mt-1 text-light-text-secondary dark:text-dark-neutral-400\">{{ notification.message }}</div>\r\n          <div class=\"mt-2 flex justify-between text-xs\">\r\n            <span>Status: {{ notification.read ? 'Read' : 'Unread' }}</span>\r\n            <button \r\n              @click=\"markAsRead(notification)\" \r\n              v-if=\"!notification.read\"\r\n              class=\"text-accent-primary hover:underline\"\r\n            >\r\n              Mark as read\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"mt-6 text-sm text-light-text-secondary dark:text-dark-neutral-400\">\r\n        <h3 class=\"font-medium mb-2 text-light-text-primary dark:text-dark-text-primary\">Troubleshooting Tips</h3>\r\n        <ul class=\"list-disc list-inside space-y-1\">\r\n          <li>If notifications aren't appearing, create the required Firestore index</li>\r\n          <li>Make sure you're logged in to see your notifications</li>\r\n          <li>Try creating a notification and then click \"Reload Notifications\"</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport { useAuthStore } from '@/stores/auth';\r\nimport { useNotificationStore } from '@/stores/notification';\r\nimport { ExclamationTriangleIcon } from '@heroicons/vue/24/outline';\r\n\r\nconst authStore = useAuthStore();\r\nconst notificationStore = useNotificationStore();\r\n\r\nconst form = ref({\r\n  title: 'Test Notification',\r\n  message: 'This is a test notification',\r\n  type: 'info'\r\n});\r\n\r\n// Helper to open the index creation page\r\nconst createIndex = () => {\r\n  notificationStore.openIndexCreationUrl();\r\n};\r\n\r\n// Format date for display\r\nconst formatDate = (date) => {\r\n  if (!date) return '';\r\n  \r\n  if (!(date instanceof Date)) {\r\n    try {\r\n      date = new Date(date);\r\n    } catch (e) {\r\n      return 'Invalid date';\r\n    }\r\n  }\r\n  \r\n  return date.toLocaleString();\r\n};\r\n\r\n// Create temporary in-app notification\r\nconst createInAppNotification = () => {\r\n  notificationStore.addNotification({\r\n    title: form.value.title,\r\n    message: form.value.message,\r\n    type: form.value.type,\r\n    timeout: 5000\r\n  });\r\n};\r\n\r\n// Create persisted notification\r\nconst createPersistedNotification = async () => {\r\n  if (!authStore.user) return;\r\n  \r\n  await notificationStore.addPersistedNotification({\r\n    title: form.value.title,\r\n    message: form.value.message,\r\n    type: form.value.type,\r\n    userId: authStore.user.uid\r\n  });\r\n  \r\n  await reloadNotifications();\r\n};\r\n\r\n// Mark notification as read\r\nconst markAsRead = async (notification) => {\r\n  await notificationStore.markAsRead(notification.id);\r\n  await reloadNotifications();\r\n};\r\n\r\n// Reload notifications from Firestore\r\nconst reloadNotifications = async () => {\r\n  if (!authStore.user) return;\r\n  await notificationStore.loadUserNotifications();\r\n};\r\n\r\n// Initialize when component is mounted\r\nonMounted(() => {\r\n  if (authStore.user) {\r\n    notificationStore.loadUserNotifications();\r\n  }\r\n});\r\n\r\n// Watch for auth changes\r\nwatch(() => authStore.user, (newUser) => {\r\n  if (newUser) {\r\n    notificationStore.loadUserNotifications();\r\n  }\r\n});\r\n</script>\r\n"],"names":["authStore","useAuthStore","notificationStore","useNotificationStore","form","ref","createIndex","formatDate","date","createInAppNotification","createPersistedNotification","reloadNotifications","markAsRead","notification","onMounted","watch","newUser"],"mappings":"8rCAwKA,MAAMA,EAAYC,EAAY,EACxBC,EAAoBC,EAAoB,EAExCC,EAAOC,EAAI,CACf,MAAO,oBACP,QAAS,8BACT,KAAM,MACR,CAAC,EAGKC,EAAc,IAAM,CACxBJ,EAAkB,qBAAoB,CACxC,EAGMK,EAAcC,GAAS,CAC3B,GAAI,CAACA,EAAM,MAAO,GAElB,GAAI,EAAEA,aAAgB,MACpB,GAAI,CACFA,EAAO,IAAI,KAAKA,CAAI,CACrB,MAAW,CACV,MAAO,cACR,CAGH,OAAOA,EAAK,gBACd,EAGMC,EAA0B,IAAM,CACpCP,EAAkB,gBAAgB,CAChC,MAAOE,EAAK,MAAM,MAClB,QAASA,EAAK,MAAM,QACpB,KAAMA,EAAK,MAAM,KACjB,QAAS,GACb,CAAG,CACH,EAGMM,EAA8B,SAAY,CACzCV,EAAU,OAEf,MAAME,EAAkB,yBAAyB,CAC/C,MAAOE,EAAK,MAAM,MAClB,QAASA,EAAK,MAAM,QACpB,KAAMA,EAAK,MAAM,KACjB,OAAQJ,EAAU,KAAK,GAC3B,CAAG,EAED,MAAMW,EAAmB,EAC3B,EAGMC,EAAa,MAAOC,GAAiB,CACzC,MAAMX,EAAkB,WAAWW,EAAa,EAAE,EAClD,MAAMF,EAAmB,CAC3B,EAGMA,EAAsB,SAAY,CACjCX,EAAU,MACf,MAAME,EAAkB,uBAC1B,EAGA,OAAAY,EAAU,IAAM,CACVd,EAAU,MACZE,EAAkB,sBAAqB,CAE3C,CAAC,EAGDa,EAAM,IAAMf,EAAU,KAAOgB,GAAY,CACnCA,GACFd,EAAkB,sBAAqB,CAE3C,CAAC"}
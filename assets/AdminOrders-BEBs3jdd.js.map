{"version":3,"file":"AdminOrders-BEBs3jdd.js","sources":["../../src/views/AdminOrders.vue"],"sourcesContent":["<template>\n  <div class=\"admin-orders min-h-screen bg-light-primary dark:bg-dark-primary transition-colors duration-300\">\n    <div class=\"container mx-auto px-4 py-8\">\n      <!-- Enhanced Header section -->\n      <div class=\"flex justify-between items-center mb-12 bg-light-secondary dark:bg-dark-secondary p-6 rounded-xl shadow-lg\">\n        <div>\n          <Breadcrumbs :items=\"[{ text: 'Dashboard', path: '/admin' }, { text: 'Orders' }]\" />\n          <h1 class=\"text-4xl font-bold text-light-text-primary dark:text-dark-text-primary mt-2\">Order Management</h1>\n          <p class=\"text-light-text-secondary dark:text-dark-text-secondary mt-1\">View and manage customer orders</p>\n        </div>\n        <button \n          @click=\"loadOrders\" \n          class=\"bg-btn-primary hover:bg-btn-primary-hover dark:hover:bg-btn-primary-dark text-light-text-inverted neutral py-2 px-4 rounded-btn flex items-center shadow-btn hover:shadow-btn-hover transition-btn duration-200\"\n        >\n          <ArrowPathIcon class=\"h-5 w-5 mr-2\" />\n          Refresh\n        </button>\n      </div>\n\n      <!-- Enhanced metric cards with gradients -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        <!-- Total Orders card -->\n        <div class=\"flex flex-col h-full bg-gradient-to-br from-light-secondary to-accent-primary/10 dark:from-dark-secondary dark:to-accent-primary/20 rounded-xl shadow-lg p-6 border-2 border-accent-primary/20\">\n          <h3 class=\"text-sm font-medium text-light-text-secondary dark:text-dark-text-secondary mb-1\">Total Orders</h3>\n          <p class=\"text-3xl font-bold text-accent-primary\">{{ orders.length }}</p>\n          <p class=\"text-xs text-light-text-secondary dark:text-dark-text-secondary mt-1\">Last 30 days: +{{ recentOrdersCount }}</p>\n        </div>\n\n        <!-- Processing Orders card -->\n        <div class=\"flex flex-col h-full bg-gradient-to-br from-light-secondary to-orange-500/10 dark:from-dark-secondary dark:to-orange-500/20 rounded-xl shadow-lg p-6 border-2 border-orange-500/20\">\n          <h3 class=\"text-sm font-medium text-light-text-secondary dark:text-dark-text-secondary mb-1\">Processing</h3>\n          <p class=\"text-3xl font-bold text-orange-500\">{{ processingOrdersCount }}</p>\n          <div class=\"flex items-center mt-2\">\n            <div class=\"h-2 flex-grow rounded-full bg-light-neutral-200 dark:bg-dark-neutral-700\">\n              <div class=\"h-2 rounded-full bg-orange-500 transition-all duration-300\" :style=\"`width: ${(processingOrdersCount / orders.length) * 100}%`\"></div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Revenue card -->\n        <div class=\"flex flex-col h-full bg-gradient-to-br from-light-secondary to-blue-500/10 dark:from-dark-secondary dark:to-blue-500/20 rounded-xl shadow-lg p-6 border-2 border-blue-500/20\">\n          <h3 class=\"text-sm font-medium text-light-text-secondary dark:text-dark-text-secondary mb-1\">Revenue</h3>\n          <p class=\"text-3xl font-bold text-blue-500\">{{ formatCurrency(totalRevenue) }}</p>\n          <p class=\"text-xs text-accent-tertiary mt-1\">\n            <span class=\"inline-block transform rotate-45\">â†—</span> {{ revenueIncrease }}% from last month\n          </p>\n        </div>\n\n        <!-- Average Order Value card -->\n        <div class=\"flex flex-col h-full bg-gradient-to-br from-light-secondary to-cyan-500/10 dark:from-dark-secondary dark:to-cyan-500/20 rounded-xl shadow-lg p-6 border-2 border-cyan-500/20\">\n          <h3 class=\"text-sm font-medium text-light-text-secondary dark:text-dark-text-secondary mb-1\">Avg. Order Value</h3>\n          <p class=\"text-3xl font-bold text-cyan-500\">${{ averageOrderValue.toFixed(2) }}</p>\n          <p class=\"text-xs text-light-text-secondary dark:text-dark-text-secondary mt-1\">Per order</p>\n        </div>\n      </div>\n\n      <!-- Enhanced Filter Section -->\n      <div class=\"bg-light-secondary dark:bg-dark-secondary rounded-xl shadow-lg p-6 mb-6 border border-light-neutral-300 dark:border-dark-neutral-700\">\n        <div class=\"flex flex-wrap items-center gap-4\">\n          <div>\n            <label class=\"text-sm text-light-text-secondary dark:text-dark-text-secondary block mb-1\">Filter by Status:</label>\n            <select\n              v-model=\"statusFilter\"\n              class=\"border border-light-neutral-300 dark:border-dark-neutral-600 rounded-lg px-3 py-2 bg-light-secondary dark:bg-dark-secondary text-light-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-accent-primary focus:border-accent-primary\"\n            >\n              <option value=\"all\">All Orders</option>\n              <option value=\"processing\">Processing</option>\n              <option value=\"shipped\">Shipped</option>\n              <option value=\"delivered\">Delivered</option>\n              <option value=\"cancelled\">Cancelled</option>\n            </select>\n          </div>\n          <div>\n            <label class=\"text-sm text-light-text-secondary dark:text-dark-text-secondary block mb-1\">Search:</label>\n            <input\n              v-model=\"searchTerm\"\n              type=\"text\"\n              placeholder=\"Order ID or customer name\"\n              class=\"border border-light-neutral-300 dark:border-dark-neutral-600 rounded-lg px-3 py-2 bg-light-secondary dark:bg-dark-secondary text-light-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-accent-primary focus:border-accent-primary\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <!-- Loading State -->\n      <div v-if=\"loading\" class=\"flex justify-center items-center h-64\">\n        <div class=\"animate-spin rounded-full h-16 w-16 border-t-4 border-blue-600 border-opacity-75\"></div>\n      </div>\n\n      <!-- Enhanced Table Section -->\n      <div v-else-if=\"filteredOrders.length > 0\" class=\"bg-light-secondary dark:bg-dark-secondary rounded-xl shadow-lg overflow-hidden border border-light-neutral-300 dark:border-dark-neutral-700\">\n        <table class=\"w-full text-left\">\n          <thead class=\"bg-light-neutral-100 dark:bg-dark-neutral-800 border-b border-light-neutral-300 dark:border-dark-neutral-700\">\n            <tr>\n              <th class=\"px-6 py-3 text-light-text-secondary dark:text-dark-text-secondary font-medium cursor-pointer\" @click=\"sortOrders('orderNumber')\">\n                <div class=\"flex items-center\">\n                  <span>Order ID</span>\n                  <SortIndicator :active=\"sortField === 'orderNumber'\" :direction=\"sortDirection\" />\n                </div>\n              </th>\n              <th class=\"px-6 py-3 text-light-text-secondary dark:text-dark-text-secondary font-medium cursor-pointer\" @click=\"sortOrders('orderDate')\">\n                <div class=\"flex items-center\">\n                  <span>Date</span>\n                  <SortIndicator :active=\"sortField === 'orderDate'\" :direction=\"sortDirection\" />\n                </div>\n              </th>\n              <th class=\"px-6 py-3 text-light-text-secondary dark:text-dark-text-secondary font-medium cursor-pointer\" @click=\"sortOrders('customerName')\">\n                <div class=\"flex items-center\">\n                  <span>Customer</span>\n                  <SortIndicator :active=\"sortField === 'customerName'\" :direction=\"sortDirection\" />\n                </div>\n              </th>\n              <th class=\"px-6 py-3 text-light-text-secondary dark:text-dark-text-secondary font-medium cursor-pointer\" @click=\"sortOrders('total')\">\n                <div class=\"flex items-center\">\n                  <span>Total</span>\n                  <SortIndicator :active=\"sortField === 'total'\" :direction=\"sortDirection\" />\n                </div>\n              </th>\n              <th class=\"px-6 py-3 text-light-text-secondary dark:text-dark-text-secondary font-medium cursor-pointer\" @click=\"sortOrders('status')\">\n                <div class=\"flex items-center\">\n                  <span>Status</span>\n                  <SortIndicator :active=\"sortField === 'status'\" :direction=\"sortDirection\" />\n                </div>\n              </th>\n              <th class=\"px-6 py-3 text-light-text-secondary dark:text-dark-text-secondary font-medium\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"order in filteredOrders\" :key=\"order.id\" class=\"border-b hover:bg-gray-50\">\n              <td class=\"px-6 py-4 font-medium\">{{ order.orderNumber || `#${order.id.substring(0, 6)}` }}</td>\n              <td class=\"px-6 py-4\">{{ formatDate(order.orderDate) }}</td>\n              <td class=\"px-6 py-4\">{{ order.customerName || 'Unknown' }}</td>\n              <td class=\"px-6 py-4\">{{ formatCurrency(order.total) }}</td>\n              <td class=\"px-6 py-4\">\n                <span\n                  :class=\"{\n                      'bg-yellow-100 text-yellow-800': order.status === 'processing',\n                      'bg-blue-100 text-blue-800': order.status === 'shipped',\n                      'bg-green-100 text-green-800': order.status === 'delivered',\n                      'bg-red-100 text-red-800': order.status === 'cancelled'\n                    }\"\n                  class=\"px-3 py-1 rounded-full text-sm font-medium\"\n                >\n                  {{ capitalizeFirstLetter(order.status) }}\n                </span>\n              </td>\n              <td class=\"px-6 py-4\">\n                <button @click=\"viewOrderDetails(order)\" class=\"text-blue-600 hover:text-blue-900 mr-3\">\n                  View\n                </button>\n                <button @click=\"openUpdateStatus(order)\" class=\"text-green-600 hover:text-green-900\">\n                  Update\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- No Orders Message -->\n      <div v-else class=\"bg-white rounded-lg shadow-md p-8 text-center\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16 text-gray-400 mx-auto mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n        </svg>\n        <h2 class=\"text-xl font-semibold text-gray-700\">No orders found</h2>\n        <p class=\"text-gray-500 mt-1\">No orders match your current filters.</p>\n      </div>\n\n      <!-- Enhanced Modals -->\n      <!-- Order Details Modal -->\n      <Transition\n        enter-active-class=\"duration-300 ease-out\"\n        enter-from-class=\"opacity-0\"\n        enter-to-class=\"opacity-100\"\n        leave-active-class=\"duration-200 ease-in\"\n        leave-from-class=\"opacity-100\"\n        leave-to-class=\"opacity-0\"\n      >\n        <div v-if=\"showOrderDetailsModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <Transition\n            enter-active-class=\"duration-300 ease-out\"\n            enter-from-class=\"opacity-0 scale-95\"\n            enter-to-class=\"opacity-100 scale-100\"\n            leave-active-class=\"duration-200 ease-in\"\n            leave-from-class=\"opacity-100 scale-100\"\n            leave-to-class=\"opacity-0 scale-95\"\n          >\n            <div class=\"bg-light-primary dark:bg-dark-primary rounded-xl shadow-xl max-w-3xl w-full max-h-[90vh] overflow-y-auto transform\">\n              <div class=\"p-6 border-b border-light-neutral-300 dark:border-dark-neutral-700\">\n                <div class=\"flex justify-between items-center\">\n                  <h2 class=\"text-2xl font-bold text-light-text-primary dark:text-dark-text-primary\">Order Details</h2>\n                  <button @click=\"showOrderDetailsModal = false\" class=\"text-light-text-secondary dark:text-dark-text-secondary hover:text-light-text-primary dark:hover:text-dark-text-primary\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n              <div class=\"p-6\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                  <div class=\"bg-light-secondary dark:bg-dark-secondary p-4 rounded-lg\">\n                    <h3 class=\"font-medium text-light-text-primary dark:text-dark-text-primary mb-2\">Order Information</h3>\n                    <p><span class=\"text-gray-500\">Order ID:</span> {{ selectedOrder?.orderNumber || `#${selectedOrder?.id.substring(0, 6)}` }}</p>\n                    <p><span class=\"text-gray-500\">Date:</span> {{ formatDate(selectedOrder?.orderDate) }}</p>\n                    <p>\n                      <span class=\"text-gray-500\">Status:</span>\n                      <span\n                        :class=\"{\n                          'bg-yellow-100 text-yellow-800': selectedOrder?.status === 'processing',\n                          'bg-blue-100 text-blue-800': selectedOrder?.status === 'shipped',\n                          'bg-green-100 text-green-800': selectedOrder?.status === 'delivered',\n                          'bg-red-100 text-red-800': selectedOrder?.status === 'cancelled'\n                        }\"\n                        class=\"px-3 py-1 rounded-full text-sm font-medium ml-1\"\n                      >\n                        {{ capitalizeFirstLetter(selectedOrder?.status) }}\n                      </span>\n                    </p>\n                    <p><span class=\"text-gray-500\">Total:</span> {{ formatCurrency(selectedOrder?.total) }}</p>\n                  </div>\n                  <div class=\"bg-light-secondary dark:bg-dark-secondary p-4 rounded-lg\">\n                    <h3 class=\"font-medium text-light-text-primary dark:text-dark-text-primary mb-2\">Customer Information</h3>\n                    <p><span class=\"text-gray-500\">Name:</span> {{ selectedOrder?.customerName || 'N/A' }}</p>\n                    <p><span class=\"text-gray-500\">Email:</span> {{ selectedOrder?.email || 'N/A' }}</p>\n                    <p><span class=\"text-gray-500\">Phone:</span> {{ selectedOrder?.phone || 'N/A' }}</p>\n                  </div>\n                </div>\n\n                <div v-if=\"selectedOrder?.shippingAddress\" class=\"mb-6 bg-light-secondary dark:bg-dark-secondary p-4 rounded-lg\">\n                  <h3 class=\"font-medium text-light-text-primary dark:text-dark-text-primary mb-2\">Shipping Address</h3>\n                  <p>{{ selectedOrder.shippingAddress.street }}, {{ selectedOrder.shippingAddress.city }}</p>\n                  <p>{{ selectedOrder.shippingAddress.state }}, {{ selectedOrder.shippingAddress.zip }}</p>\n                  <p>{{ selectedOrder.shippingAddress.country }}</p>\n                </div>\n\n                <div class=\"mb-6\">\n                  <h3 class=\"font-medium text-light-text-primary dark:text-dark-text-primary mb-2\">Order Items</h3>\n                  <div class=\"border border-light-neutral-300 dark:border-dark-neutral-700 rounded-lg overflow-hidden\">\n                    <table class=\"w-full text-sm\">\n                      <thead class=\"bg-light-neutral-100 dark:bg-dark-neutral-800\">\n                        <tr>\n                          <th class=\"px-4 py-2 text-left\">Product</th>\n                          <th class=\"px-4 py-2 text-left\">Price</th>\n                          <th class=\"px-4 py-2 text-left\">Quantity</th>\n                          <th class=\"px-4 py-2 text-right\">Subtotal</th>\n                        </tr>\n                      </thead>\n                      <tbody class=\"bg-light-secondary dark:bg-dark-secondary\">\n                        <tr v-for=\"(item, index) in selectedOrder?.items\" :key=\"index\" class=\"border-t\">\n                          <td class=\"px-4 py-3\">\n                        <div class=\"flex items-center\">\n                          <img :src=\"item.image || 'https://via.placeholder.com/80'\" alt=\"Product\" class=\"w-16 h-16 object-cover rounded-lg shadow-card\" />\n                          <span class=\"pl-2\">{{ item.name }}</span>\n                        </div>\n                      </td>\n                          <td class=\"px-4 py-3\">{{ item.price?.toFixed(2) }}</td>\n                          <td class=\"px-4 py-3\">{{ item.quantity }}</td>\n                          <td class=\"px-4 py-3 text-right\">${{ (item.price * item.quantity).toFixed(2) }}</td>\n                        </tr>\n                      </tbody>\n                      <tfoot class=\"bg-light-neutral-100 dark:bg-dark-neutral-800\">\n                        <tr>\n                          <td colspan=\"3\" class=\"px-4 py-2 text-right font-medium\">Total:</td>\n                          <td class=\"px-4 py-2 text-right font-bold\">${{ selectedOrder?.total?.toFixed(2) }}</td>\n                        </tr>\n                      </tfoot>\n                    </table>\n                  </div>\n                </div>\n\n                <div class=\"flex justify-end\">\n                  <button\n                    @click=\"openUpdateStatus(selectedOrder)\"\n                    class=\"bg-btn-primary hover:bg-btn-primary-hover dark:hover:bg-btn-primary-dark text-light-text-inverted px-4 py-2 rounded-btn shadow-btn hover:shadow-btn-hover transition-btn duration-200 mr-2\"\n                  >\n                    Update Status\n                  </button>\n                  <button \n                    @click=\"showOrderDetailsModal = false\"\n                    class=\"bg-light-neutral-200 dark:bg-dark-neutral-700 text-light-text-primary dark:text-dark-text-primary px-4 py-2 rounded-btn hover:bg-light-neutral-300 dark:hover:bg-dark-neutral-600 transition-colors duration-200\"\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </Transition>\n        </div>\n      </Transition>\n\n\n      <!-- Update Status Modal -->\n      <Transition\n        enter-active-class=\"duration-300 ease-out\"\n        enter-from-class=\"opacity-0\"\n        enter-to-class=\"opacity-100\"\n        leave-active-class=\"duration-200 ease-in\"\n        leave-from-class=\"opacity-100\"\n        leave-to-class=\"opacity-0\"\n      >\n        <div v-if=\"showStatusModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <Transition\n            enter-active-class=\"duration-300 ease-out\"\n            enter-from-class=\"opacity-0 scale-95\"\n            enter-to-class=\"opacity-100 scale-100\"\n            leave-active-class=\"duration-200 ease-in\"\n            leave-from-class=\"opacity-100 scale-100\"\n            leave-to-class=\"opacity-0 scale-95\"\n          >\n            <div class=\"bg-light-primary dark:bg-dark-primary rounded-xl shadow-xl p-6 w-full max-w-md transform\">\n              <h2 class=\"text-xl font-bold mb-4 text-light-text-primary dark:text-dark-text-primary\">Update Order Status</h2>\n              <div class=\"mb-4\">\n                <p class=\"text-light-text-secondary dark:text-dark-text-secondary mb-2\">\n                  Order: {{ selectedOrder?.orderNumber || `#${selectedOrder?.id.substring(0, 6)}` }}\n                </p>\n                <label class=\"block text-light-text-primary dark:text-dark-text-primary mb-2\">Status:</label>\n                <select\n                  v-model=\"newStatus\"\n                  class=\"w-full border border-light-neutral-300 dark:border-dark-neutral-700 rounded-lg px-3 py-2 bg-light-secondary dark:bg-dark-secondary text-light-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-accent-primary focus:border-accent-primary\"\n                >\n                  <option value=\"processing\">Processing</option>\n                  <option value=\"shipped\">Shipped</option>\n                  <option value=\"delivered\">Delivered</option>\n                  <option value=\"cancelled\">Cancelled</option>\n                </select>\n              </div>\n              <div class=\"flex justify-end gap-2\">\n                <button \n                  @click=\"showStatusModal = false\"\n                  class=\"bg-light-neutral-200 dark:bg-dark-neutral-700 text-light-text-primary dark:text-dark-text-primary px-4 py-2 rounded-btn hover:bg-light-neutral-300 dark:hover:bg-dark-neutral-600 transition-colors duration-200\"\n                >\n                  Cancel\n                </button>\n                <button\n                  @click=\"updateOrderStatus\"\n                  class=\"bg-btn-primary hover:bg-btn-primary-hover dark:hover:bg-btn-primary-dark text-light-text-inverted px-4 py-2 rounded-btn shadow-btn hover:shadow-btn-hover transition-btn duration-200\"\n                  :disabled=\"statusUpdateLoading\"\n                >\n                  <span v-if=\"statusUpdateLoading\" class=\"inline-block animate-spin mr-2\">âŒ›</span>\n                  Update\n                </button>\n              </div>\n            </div>\n          </Transition>\n        </div>\n      </Transition>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\nimport Breadcrumbs from '../components/ui/Breadcrumbs.vue';\nimport { firebaseService } from '../services/firebaseService';\nimport { formatCurrency } from '@/utils/currency';\n\n// State\nconst orders = ref([]);\nconst loading = ref(true);\nconst statusFilter = ref('all');\nconst searchTerm = ref('');\nconst showOrderDetailsModal = ref(false);\nconst showStatusModal = ref(false);\nconst selectedOrder = ref(null);\nconst newStatus = ref('');\nconst statusUpdateLoading = ref(false);\n\n// Sort Stats\nconst sortField = ref('orderNumber');\nconst sortDirection = ref('asc');\n\nconst recentOrdersCount = ref(0);\nconst processingOrdersCount = computed(() => orders.value.filter(order => order.status === 'processing').length);\n\nconst totalRevenue = computed(() => {\n  return orders.value.reduce((sum, order) => sum + (order.total || 0), 0);\n});\nconst averageOrderValue = computed(() => {\n  if (orders.value.length) return totalRevenue.value / orders.value.length;\n  return 0;\n});\nconst revenueIncrease = ref(15); // Example value\n\n// Computed\nconst filteredOrders = computed(() => {\n  let result = [...orders.value];\n\n  // Filter by status\n  if (statusFilter.value !== 'all') {\n    result = result.filter(order => order.status === statusFilter.value);\n  }\n\n  // Filter by search term\n  if (searchTerm.value.trim()) {\n    const term = searchTerm.value.toLowerCase();\n    result = result.filter(order => {\n      const orderId = order.orderNumber?.toLowerCase() || order.id.toLowerCase();\n      const customerName = order.customerName?.toLowerCase() || '';\n      return orderId.includes(term) || customerName.includes(term);\n    });\n  }\n\n  // Sorting Algorithm\n  result.sort((a, b) => {\n    let valA = a[sortField.value];\n    let valB = b[sortField.value];\n\n    // If sorting dates, use the seconds property.\n    if (sortField.value === 'orderDate') {\n      valA = valA?.seconds || 0;\n      valB = valB?.seconds || 0;\n    }\n\n    // Compare the two values in correct order\n    const comparison = valA > valB ? 1 : valA < valB ? -1 : 0;\n\n    // Return the results in sorted order\n    return sortDirection.value === 'asc' ? comparison : -comparison;\n  });\n  return result;\n});\n\n// Methods\nconst loadOrders = async () => {\n  loading.value = true;\n  try {\n    const allOrders = await firebaseService.getAllOrders();\n    orders.value = allOrders;\n  } catch (error) {\n    console.error(\"Error loading orders:\", error);\n    // You could add error handling UI here if needed\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst viewOrderDetails = (order) => {\n  selectedOrder.value = order;\n  showOrderDetailsModal.value = true;\n};\n\nconst openUpdateStatus = (order) => {\n  selectedOrder.value = order;\n  newStatus.value = order.status || 'processing';\n  showStatusModal.value = true;\n};\n\nconst updateOrderStatus = async () => {\n  if (!selectedOrder.value || !newStatus.value) return;\n  statusUpdateLoading.value = true;\n  try {\n    await firebaseService.updateOrderStatus(selectedOrder.value.id, newStatus.value);\n\n    // Update the order in the local state\n    const index = orders.value.findIndex(o => o.id === selectedOrder.value.id);\n    if (index !== -1) {\n      orders.value[index].status = newStatus.value;\n    }\n\n    // Update selected order if the details modal is open\n    if (selectedOrder.value) {\n      selectedOrder.value.status = newStatus.value;\n    }\n\n    showStatusModal.value = false;\n  } catch (error) {\n    console.error(\"Error updating order status:\", error);\n    // You could add error handling UI here if needed\n  } finally {\n    statusUpdateLoading.value = false;\n  }\n};\n\nconst formatDate = (dateValue) => {\n  if (!dateValue) return 'N/A';\n\n  const date = dateValue.toDate ? dateValue.toDate() : new Date(dateValue);\n  return new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  }).format(date);\n};\n\nconst capitalizeFirstLetter = (string) => {\n  if (!string) return '';\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\n// Lifecycle\nonMounted(() => {\n  loadOrders();\n});\n</script>\n\n<style scoped>\n.hover-card {\n  transition: all 0.3s ease;\n}\n\n.hover-card:hover {\n  transform: scale(1.02);\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n}\n</style>\n"],"names":["orders","ref","loading","statusFilter","searchTerm","showOrderDetailsModal","showStatusModal","selectedOrder","newStatus","statusUpdateLoading","sortField","sortDirection","recentOrdersCount","processingOrdersCount","computed","order","totalRevenue","sum","averageOrderValue","revenueIncrease","filteredOrders","result","term","orderId","_a","customerName","_b","a","b","valA","valB","comparison","loadOrders","allOrders","firebaseService","error","viewOrderDetails","openUpdateStatus","updateOrderStatus","index","o","formatDate","dateValue","date","capitalizeFirstLetter","string","onMounted"],"mappings":"syIAqWA,MAAMA,EAASC,EAAI,EAAE,EACfC,EAAUD,EAAI,EAAI,EAClBE,EAAeF,EAAI,KAAK,EACxBG,EAAaH,EAAI,EAAE,EACnBI,EAAwBJ,EAAI,EAAK,EACjCK,EAAkBL,EAAI,EAAK,EAC3BM,EAAgBN,EAAI,IAAI,EACxBO,EAAYP,EAAI,EAAE,EAClBQ,EAAsBR,EAAI,EAAK,EAG/BS,EAAYT,EAAI,aAAa,EAC7BU,EAAgBV,EAAI,KAAK,EAEzBW,GAAoBX,EAAI,CAAC,EACzBY,EAAwBC,EAAS,IAAMd,EAAO,MAAM,OAAOe,GAASA,EAAM,SAAW,YAAY,EAAE,MAAM,EAEzGC,EAAeF,EAAS,IACrBd,EAAO,MAAM,OAAO,CAACiB,EAAKF,IAAUE,GAAOF,EAAM,OAAS,GAAI,CAAC,CACvE,EACKG,GAAoBJ,EAAS,IAC7Bd,EAAO,MAAM,OAAegB,EAAa,MAAQhB,EAAO,MAAM,OAC3D,CACR,EACKmB,GAAkBlB,EAAI,EAAE,EAGxBmB,EAAiBN,EAAS,IAAM,CACpC,IAAIO,EAAS,CAAC,GAAGrB,EAAO,KAAK,EAQ7B,GALIG,EAAa,QAAU,QACzBkB,EAASA,EAAO,OAAON,GAASA,EAAM,SAAWZ,EAAa,KAAK,GAIjEC,EAAW,MAAM,OAAQ,CAC3B,MAAMkB,EAAOlB,EAAW,MAAM,YAAa,EAC3CiB,EAASA,EAAO,OAAON,GAAS,SAC9B,MAAMQ,IAAUC,EAAAT,EAAM,cAAN,YAAAS,EAAmB,gBAAiBT,EAAM,GAAG,YAAa,EACpEU,IAAeC,EAAAX,EAAM,eAAN,YAAAW,EAAoB,gBAAiB,GAC1D,OAAOH,EAAQ,SAASD,CAAI,GAAKG,EAAa,SAASH,CAAI,CACjE,CAAK,CACL,CAGE,OAAAD,EAAO,KAAK,CAACM,EAAGC,IAAM,CACpB,IAAIC,EAAOF,EAAEjB,EAAU,KAAK,EACxBoB,EAAOF,EAAElB,EAAU,KAAK,EAGxBA,EAAU,QAAU,cACtBmB,GAAOA,GAAA,YAAAA,EAAM,UAAW,EACxBC,GAAOA,GAAA,YAAAA,EAAM,UAAW,GAI1B,MAAMC,EAAaF,EAAOC,EAAO,EAAID,EAAOC,EAAO,GAAK,EAGxD,OAAOnB,EAAc,QAAU,MAAQoB,EAAa,CAACA,CACzD,CAAG,EACMV,CACT,CAAC,EAGKW,EAAa,SAAY,CAC7B9B,EAAQ,MAAQ,GAChB,GAAI,CACF,MAAM+B,EAAY,MAAMC,GAAgB,aAAc,EACtDlC,EAAO,MAAQiC,CAChB,OAAQE,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,CAEhD,QAAY,CACRjC,EAAQ,MAAQ,EACpB,CACA,EAEMkC,GAAoBrB,GAAU,CAClCR,EAAc,MAAQQ,EACtBV,EAAsB,MAAQ,EAChC,EAEMgC,EAAoBtB,GAAU,CAClCR,EAAc,MAAQQ,EACtBP,EAAU,MAAQO,EAAM,QAAU,aAClCT,EAAgB,MAAQ,EAC1B,EAEMgC,GAAoB,SAAY,CACpC,GAAI,GAAC/B,EAAc,OAAS,CAACC,EAAU,OACvC,CAAAC,EAAoB,MAAQ,GAC5B,GAAI,CACF,MAAMyB,GAAgB,kBAAkB3B,EAAc,MAAM,GAAIC,EAAU,KAAK,EAG/E,MAAM+B,EAAQvC,EAAO,MAAM,UAAUwC,GAAKA,EAAE,KAAOjC,EAAc,MAAM,EAAE,EACrEgC,IAAU,KACZvC,EAAO,MAAMuC,CAAK,EAAE,OAAS/B,EAAU,OAIrCD,EAAc,QAChBA,EAAc,MAAM,OAASC,EAAU,OAGzCF,EAAgB,MAAQ,EACzB,OAAQ6B,EAAO,CACd,QAAQ,MAAM,+BAAgCA,CAAK,CAEvD,QAAY,CACR1B,EAAoB,MAAQ,EAChC,EACA,EAEMgC,EAAcC,GAAc,CAChC,GAAI,CAACA,EAAW,MAAO,MAEvB,MAAMC,EAAOD,EAAU,OAASA,EAAU,SAAW,IAAI,KAAKA,CAAS,EACvE,OAAO,IAAI,KAAK,eAAe,QAAS,CACtC,KAAM,UACN,MAAO,QACP,IAAK,UACL,KAAM,UACN,OAAQ,SACZ,CAAG,EAAE,OAAOC,CAAI,CAChB,EAEMC,EAAyBC,GACxBA,EACEA,EAAO,OAAO,CAAC,EAAE,YAAW,EAAKA,EAAO,MAAM,CAAC,EADlC,GAKtB,OAAAC,GAAU,IAAM,CACdd,EAAY,CACd,CAAC"}